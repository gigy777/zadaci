{"version":3,"sources":["reducers/constants/ActionTypes.jsx","services/utils.jsx","reducers/actions/index.jsx","layout/Header.jsx","components/Tile.jsx","layout/TilesBoard.jsx","reducers/memoryReducer.jsx","reducers/index.jsx","index.js","store/configureStore.jsx","components/App.jsx"],"names":["START_GAME","FLIP_TILE","MATCH_CHECK","TOGGLE_IS_WAITING","INCREMENT_TRIES","_numbers","getNumbers","numbers","i","push","number","flipped","matched","_","shuffle","concat","generateNumbers","startGame","tiles","console","log","type","types","flipTile","index","tile","toggleIsWaiting","isWaiting","incrementTries","matchCheck","flippedTiles","Header","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleClickResetButon","bind","assertThisInitialized","e","_this2","setTimeout","props","react_default","a","createElement","className","numberOfTries","onClick","Component","connect","state","memory","dispatch","bindActionCreators","actions","Tile","onClickTile","classFlipped","TilesBoard","_Component","renderTiles","onHandleClickTile","inherits","createClass","key","value","_this$props","filter","matches","length","_this$props2","map","components_Tile","INITIAL_STATE","rootReducer","combineReducers","arguments","undefined","action","objectSpread","toConsumableArray","slice","newTiles","store","createStore","ReactDOM","render","lib","layout_Header","layout_TilesBoard","document","getElementById"],"mappings":"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","file":"static/js/main.62cf3a0d.chunk.js","sourcesContent":["export const START_GAME = 'START_GAME';\nexport const FLIP_TILE = 'FLIP_TILE';\nexport const MATCH_CHECK= 'MATCH_CHECK';\nexport const TOGGLE_IS_WAITING = 'TOGGLE_IS_WAITING';\nexport const INCREMENT_TRIES = 'INCREMENT_TRIES';","import _ from 'lodash';\n\nvar _tiles = [];\nvar _numbers = [];\n\n// function generateTiles() {\nconst generateNumbers = () => {\n  _tiles = [];\n  _numbers = []\n  let numbers = [];\n\n  for (let i = 1; i < 9; i++) {\n    numbers.push(\n      {\n        number: i,\n        flipped: false,\n        matched: false\n      });\n  }\n\n  _numbers = _.shuffle(_.concat(numbers, numbers));\n\n}\n\n\n// function getTiles() {\nconst getNumbers = () => {\n  generateNumbers();\n  return _numbers;\n}\n\nexport { getNumbers }\n\n\n\n","import * as types from '../constants/ActionTypes';\nimport {getNumbers} from '../../services/utils';\n\nexport function startGame () {\n  var tiles = getNumbers()\n  console.log('test----->>>',tiles);\n  return {\n    type: types.START_GAME,\n    tiles\n  }\n}\n\nexport function flipTile(index, tile) {\n  return {\n    type: types.FLIP_TILE,\n    index,\n    tile\n  }\n}\n\nexport function toggleIsWaiting(isWaiting)  {\n  return {\n    type: types.TOGGLE_IS_WAITING,\n    isWaiting\n  }\n}\n\nexport function incrementTries()  {\n  return {\n    type: types.INCREMENT_TRIES\n  }\n}\n\nexport function matchCheck (flippedTiles) {\n  return {\n    type: types.MATCH_CHECK,\n    flippedTiles\n  }\n}\n\n\n","import React, {Component} from 'react';\nimport {connect} from 'react-redux';\nimport {bindActionCreators} from 'redux';\n\nimport * as actions from '../reducers/actions';\n\nclass Header extends Component {\n  \n  constructor() {\n    super();\n    this.handleClickResetButon = this.handleClickResetButon.bind(this);\n  }\n  \n  handleClickResetButon(e) {\n    ///e.preventDefault();\n    setTimeout(()=>{\n      this.props.startGame();  \n    }, 1000)\n    \n  }\n  \n  render() {\n    return(\n      <nav className=\"navbar navbar-default navbar-top\">\n  \t\t  <div className=\"container\">\n  \t\t  \t<div className=\"navbar-header\">\n      \t\t\t<p className=\"navbar-brand\">Number of tries: <span className=\"label label-success\">{this.props.numberOfTries}</span></p>\n    \t\t\t</div>\n    \t\t\t<div className=\"collapse navbar-collapse\">\n      \t\t\t<ul className=\"nav navbar-nav navbar-right\">\n          \t\t<li><a className=\"btn btn-default btn-small\" onClick={this.handleClickResetButon}>Restart</a></li>\n          \t</ul>\n        \t</div>\n        </div>\n  \t\t</nav>  \n    )\n  \n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    numberOfTries: state.memory.numberOfTries\n  }\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return bindActionCreators({\n    startGame: actions.startGame,\n  }, dispatch);\n}\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Header);","import React, {Component} from 'react';\n\nimport * as actions from '../reducers/actions';\n\nconst Tile = (props) =>{\n  console.log(props);\n  const {tile, index, onClickTile} = props;\n  let classFlipped = tile.flipped ? 'tile effect__click flipped' : 'tile effect__click';\n     \n  // const tileBackgroundImage = {\n  //    backgroundImage: 'url(' + tile.image + ')'\n  // };\n      \n  return (\n    \n    <div className={classFlipped} onClick={()=>{onClickTile(tile, index)}}>\n      <div className=\"tile__front\">\n      </div>\n      <div className=\"tile__back\">\n      {tile.number}\n      </div>\n    </div>\n  );\n  \n}\n\nexport default Tile;\n","import React, {Component} from 'react';\n\nimport {connect} from 'react-redux';\nimport {bindActionCreators} from 'redux';\n\nimport _ from 'lodash';\n\nimport Tile from '../components/Tile';\nimport * as actions from '../reducers/actions';\n\nexport class TilesBoard extends Component {\n  \n  constructor(props) {\n    super(props);\n    this.renderTiles = this.renderTiles.bind(this);\n    this.onHandleClickTile = this.onHandleClickTile.bind(this);\n  }\n\n  componentDidUpdate(){\n    const {tiles, toggleIsWaiting, matchCheck, incrementTries} = this.props;\n    const flippedTiles = _.filter(tiles, _.matches({'flipped': true, 'matched': false}));\n    \n   \n   if(flippedTiles.length >= 2) {\n      toggleIsWaiting(true);\n\n      // try to fix componentDidUpdate called twice\n      // becaue actions are wrapped inside if statement\n      if(this.props.isWaiting) {\n        incrementTries();  \n        setTimeout(()=>{\n          matchCheck(flippedTiles);\n        }, 500);\n      }\n      \n\n      \n      \n    }\n  }\n  \n  onHandleClickTile(tile, index){\n    const {flipTile, isWaiting} = this.props;\n    \n\n    if(isWaiting) return;\n    \n    flipTile(index, tile);\n    \n  }\n  \n  renderTiles() {\n    console.log('hello');\n    const {tiles} = this.props;\n    console.log(tiles);\n    //if (tiles) {\n      return tiles.map((tile, i)=>{\n        return (\n          <Tile tile={tile} key={i} index={i} onClickTile={this.onHandleClickTile}/>\n        );\n      });\n    /*}\n    return (\n      <div>No tiles</div>\n    )*/\n  }\n  \n  render() {\n    return (\n      <div className=\"container gameboard\">\n        <div className=\"row\">\n         {this.renderTiles()}\n        </div>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps (state) {\n  return {\n    tiles:state.memory.tiles,\n    isWaiting: state.memory.isWaiting\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return bindActionCreators({\n    toggleIsWaiting: actions.toggleIsWaiting,\n    incrementTries: actions.incrementTries,\n    matchCheck: actions.matchCheck,\n    flipTile: actions.flipTile\n  }, dispatch);\n}\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TilesBoard);","import * as types from '../reducers/constants/ActionTypes';\n\nconst INITIAL_STATE = {\n  tiles: [],\n  isWaiting: false,\n  numberOfTries: 0\n}\n\n\nexport function memoryReducer (state=INITIAL_STATE, action) {\n  switch(action.type) {\n    case types.START_GAME:\n      \n      return {\n        ...state,\n        isWaiting: false,\n        numberOfTries: 0,\n        tiles: [...action.tiles]\n      };\n    \n    case types.FLIP_TILE:\n      const {index, tile} = action;\n      \n      return {\n        ...state,\n        tiles: [ \n          ...state.tiles.slice(0, index),\n          {\n            ...tile, \n            flipped: true\n          }, \n         ...state.tiles.slice(index+1)\n        ],\n       };\n       \n    case types.TOGGLE_IS_WAITING:\n      return {\n        ...state,\n        isWaiting: action.isWaiting\n      };\n    \n    case types.MATCH_CHECK:\n      const {tiles} = state; \n \n      if (action.flippedTiles[0].number === action.flippedTiles[1].number) {\n        // Tiles are Equal\n        let newTiles = tiles.map((tile)=>{\n          if (tile.flipped === true && tile.matched === false) {\n            return {\n              ...tile,\n              matched: true \n            };\n          } else {\n            return tile;\n          }\n        });\n        \n        return {\n          ...state,\n          tiles: newTiles,\n          isWaiting: false\n        };\n        \n      } else {\n        // Tiles are not equal\n        let newTiles = tiles.map((tile)=>{\n          if (tile.flipped === true && tile.matched === false) {\n            return {\n              ...tile,\n              flipped: false\n            }\n          } else {\n            return tile\n          }\n        })\n        \n        return {\n          ...state,\n          tiles: newTiles,\n          isWaiting: false\n        }\n      }\n    \n    case types.INCREMENT_TRIES: \n      return {\n        ...state,\n        numberOfTries: state.numberOfTries+1 \n      }\n      \n      \n    default: \n      return state;\n  }\n};","import {combineReducers} from 'redux';\nimport {memoryReducer} from './memoryReducer';\n\n\nconst rootReducer = combineReducers({\n     memory: memoryReducer\n});\n\nexport default rootReducer;\n","\nimport { Provider } from \"react-redux\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./App.css\";\nimport App from \"./components/App\";\nimport * as actions from './reducers/actions';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport configureStore from './store/configureStore';\n\nconst store = configureStore();\n\nstore.dispatch(actions.startGame());\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n","import { createStore, compose } from \"redux\";\n\nimport rootReducer from \"../reducers\";\n\nexport default function configure() {\n  // create store and add support for react dev tools in Chrome\n  const store = createStore(rootReducer);\n\n  return store;\n}\n","import React from 'react';\n\nimport Header from '../layout/Header';\nimport TilesBoard from '../layout/TilesBoard';\n\nexport default function App() {\n\treturn (\n\t  <section>\n\t  \t<Header />\n\t  \t<TilesBoard />\n    </section>\n\t);\n}\n"],"sourceRoot":""}